{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","showForm","setshowForm","requestStatus","setRequestStatus","className","initialValues","email","validate","values","props","errors","test","onSubmit","a","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","status","catch","error","console","log","formik","id","name","placeholder","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA6DeA,MA1Df,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACJC,EADI,KACMC,EADN,OAE+BF,mBAAS,MAFxC,mBAEJG,EAFI,KAEWC,EAFX,KAcb,OACI,gCACI,qBAAKC,UAAU,mBAAf,SAAmCF,IAEnC,cAAC,IAAD,CACFG,cAAe,CACXC,MAAO,IAEXC,SAnBa,SAACC,EAAQC,GACtB,IAAMC,EAAS,GAOf,OALKF,EAAOF,MAEA,4CAA4CK,KAAKH,EAAOF,SAChEI,EAAOJ,MAAQ,yBAFfI,EAAOJ,MAAQ,iBAIZI,GAYPE,SAAQ,uCAAE,WAAOJ,GAAP,eAAAK,EAAA,sDACAC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUX,IAExBY,MAAM,+CAAgDN,GAClDO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIrB,EAAiBqB,EAAKC,WACnCJ,MAAK,kBAAMpB,GAAY,MACvByB,OAAM,SAACC,GACJC,QAAQC,IAAI,UAAYF,GACxBxB,EAAiBwB,MAZnB,2CAAF,sDALN,SAqBD,SAACG,GAAD,OACD9B,GAAa,eAAC,IAAD,WACR8B,EAAOpB,OAAOJ,OAAS,qBAAKF,UAAU,mBAAf,SAAmC0B,EAAOpB,OAAOJ,QAEzE,cAAC,IAAD,CACIyB,GAAG,QACHC,KAAK,QACLC,YAAY,wBACZC,KAAK,QACL9B,UAAU,gBAEd,wBAAQ8B,KAAK,SAAS9B,UAAU,cAAhC,8BCzCG+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2c1664de.chunk.js","sourcesContent":["import { Formik, Field, Form } from 'formik';\nimport { useState } from 'react';\n\nfunction App() {\n    const [showForm, setshowForm] = useState(true)\n    const [requestStatus, setRequestStatus] = useState(null)\n    const validate = (values, props) => {\n        const errors = {};\n\n        if (!values.email) {\n            errors.email = 'Email Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n        }\n        return errors;\n    };\n\n  return (\n      <div>\n          <div className=\"mb-2 orange-text\">{requestStatus}</div>\n\n          <Formik\n        initialValues={{\n            email: '',\n        }}\n        validate={validate}\n        onSubmit={async (values) => {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(values)\n            };\n             fetch('https://api.joinecho.app/invitation_requests', requestOptions)\n                .then(response => response.json())\n                .then(data => setRequestStatus(data.status))\n                .then(() => setshowForm(false))\n                .catch((error) => {\n                    console.log('error: ' + error);\n                    setRequestStatus(error);\n                });;\n        }}\n    >\n        {(formik) => (\n        showForm && (<Form>\n            {formik.errors.email && <div className=\"mb-2 orange-text\">{formik.errors.email}</div>}\n\n            <Field\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"youremail@example.com\"\n                type=\"email\"\n                className=\"email-field\"\n            />\n            <button type=\"submit\" className=\"button mx-2\">Submit</button>\n        </Form>)\n            )}\n    </Formik>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}